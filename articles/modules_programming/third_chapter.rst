第三章 多文件编程
=================

C/C++经常将函数封装在源文件中，然后通过#include语句包含在目标源文件里。

win32汇编程序也可以使用这个技巧。
在这之前，先介绍下win32程序的一般格式。
对于每个 ``.asm`` 源文件，其程序格式如下：

.. code-block:: C
  :linenos:

  .386
  .model <内存模式>, <调用方式/语言>
  <选项>

  <include 语句>
  <.data段>
  <.data?段>
  <.code段>

.. note::
	.data，.data?，.const以及.code段的顺序可以是任意的。

内存模式的参数值如下表所示：

+----------+----------------+----------------+
| 内存模式 | 代码段         | 数据段         |
+==========+================+================+
| tiny     | 共用64KB       | 共用64KB       |
+----------+----------------+----------------+
| small    | 64KB代码段     | 64KB数据段     |
+----------+----------------+----------------+
| medium   | 多个64KB代码段 | 64KB数据段     |
+----------+----------------+----------------+
| compact  | 64KB代码段     | 多个64KB数据段 |
+----------+----------------+----------------+
| large    | 多个64KB代码段 | 多个64KB数据段 |
+----------+----------------+----------------+
| huge     | 多个64KB代码段 | 多个64KB数据段 |
|          |                | ,可以定义超过  |
|          |                | 64KB数组       |
+----------+----------------+----------------+
| flat     | 共用4GB代码段  | 共用4GB数据段  |
+----------+----------------+----------------+

每个 ``.asm`` 源文件，都可以有一个 ``.inc`` 文件。
``.inc`` 文件中可以使用 ``include`` 语句，定义数据段以及子程序的声明。

.. warning::
 子程序的声明可以在程序的任意位置

将多个.asm源文件整合成一个工程就是多模块编程的思想。
这些源文件中只有一个.asm文件中含有 ``开始标号`` 和 ``end 开始标号``，
其余的源文件只在.code段结尾有 ``end``。

一个工程中的所有.asm文件都可以数据段和代码段，因为内存模式是flat类型。
也就是说一个工程中可以有多个.data段或者多个.code段。

.. note::
 还有一种方法，严格意义上说不是多模块编程。比如某个子程序可以定义在.asm文件中，
 然后通过 ``#include`` 语句包含进来。其实一个整体的.asm程序，只是分摊在不同的.asm文件中。


